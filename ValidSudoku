//Determine if a Sudoku is valid, according to rules

public class Solution {
    public boolean isValidSudoku(char[][] board) {
        for(int i=0;i<board.length;i++)
        {
            HashSet<Character> h=new HashSet<>();
            for(int j=0;j<board[0].length;j++)
            {
                if(board[i][j]=='.')
                    continue;
                if(h.contains(board[i][j]))
                    return false;
                else
                    h.add(board[i][j]);
            }
        }
        for(int i=0;i<board[0].length;i++)
        {
            HashSet<Character> h=new HashSet<>();
            for(int j=0;j<board.length;j++)
            {
                if(board[j][i]=='.')
                    continue;
                if(h.contains(board[j][i]))
                    return false;
                else
                    h.add(board[j][i]);
            }
        }
        for(int i=0;i<board.length;i=i+3)
        {
            for(int j=0;j<board[0].length;j=j+3)
            {
                HashSet<Character> h=new HashSet<>();
                for(int k=0;k<3;k++)
                {
                    for(int l=0;l<3;l++)
                    {
                        if(board[i+k][j+l]=='.')
                            continue;
                        if(h.contains(board[i+k][j+l]))
                            return false;
                        else
                            h.add(board[i+k][j+l]);
                    }
                }
            }
        }
        return true;
    }
}
