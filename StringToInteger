
package codes;
/*Implement atoi to convert a string to an integer.
*The function first discards as many whitespace characters as necessary until the first non-whitespace character is found. 
*Then, starting from this character, takes an optional initial plus or minus sign followed by as many numerical digits as possible, 
*and interprets them as a numerical value.
*The string can contain additional characters after those that form the integral number, which are ignored and have no effect 
*on the behavior of this function. If the first sequence of non-whitespace characters in str is not a valid integral number, 
*or if no such sequence exists because either str is empty or it contains only whitespace characters, no conversion is performed.
*If no valid conversion could be performed, a zero value is returned. If the correct value is out of the range of representable values, 
*INT_MAX (2147483647) or INT_MIN (-2147483648) is returned.
*/
public class StringToInteger 
{
	public int myAtoi(String str) 
	{
		str=str.trim();
		if(str=="")
			return 0;
		int a=0;
		long b=0;
		int minus=0;
		for(int i=0;i<str.length();i++)
		{
			if(str.charAt(i)=='-')
			{
				if(i==0)
				{
				    minus=1;
				    continue;
				}
				else
				    return 0;
			}
			else if(str.charAt(i)=='+')
			{
			    if(i==0)
				{
				    minus=0;
				    continue;
				}
				else
				    return 0;
			}
			if((str.charAt(i))<'0'||(str.charAt(i))>'9')
			{
			    if(minus==1)
			        return -a;
		        else
			        return a;
			}
			if(minus==0&&(b*10+(int)(str.charAt(i)-48)>Integer.MAX_VALUE))
			{
				return Integer.MAX_VALUE;
			}
			else if(minus==1&&((-1)*(b*10+(int)(str.charAt(i)-48))<Integer.MIN_VALUE))
			{
				return Integer.MIN_VALUE;
			}
			a=a*10+(int)(str.charAt(i)-48);
			b=a;
		}
		if(minus==1)
			return -a;
		else
			return a;
    }
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		StringToInteger s=new StringToInteger();
		int num=s.myAtoi("    10522545459");
		System.out.println(num);
	}

}
