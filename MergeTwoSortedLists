/**
* Merge two sorted linked lists and return it as a new list. 
* The new list should be made by splicing together the nodes of the first two lists.
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */

public class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) 
    {
        ListNode temp1=l1;
        ListNode temp2=l2;
        ListNode l3=null,temp3=null;
        if(l1==null)
            return l2;
        if(l2==null)
            return l1;
        while((temp1!=null)&&(temp2!=null))
        {
            if(temp1.val<temp2.val)
            {
                if(l3==null)
                {
                    l3=new ListNode(temp1.val);
                    l3.next=null;
                    temp3=l3;
                }
                else
                {
                    temp3.next=new ListNode(temp1.val);
                    temp3=temp3.next;
                    temp3.next=null;
                }
                temp1=temp1.next;
            }
            else if(temp1.val>temp2.val)
            {
                if(l3==null)
                {
                    l3=new ListNode(temp2.val);
                    l3.next=null;
                    temp3=l3;
                }
                else
                {
                    temp3.next=new ListNode(temp2.val);
                    temp3=temp3.next;
                    temp3.next=null;
                }
                temp2=temp2.next;
            }
            else
            {
                if(l3==null)
                {
                    l3=new ListNode(temp1.val);
                    l3.next=null;
                    temp3=new ListNode(temp2.val);
                    l3.next=temp3;
                    temp3.next=null;
                }
                else
                {
                    temp3.next=new ListNode(temp1.val);
                    temp3=temp3.next;
                    temp3.next=null;
                    temp3.next=new ListNode(temp2.val);
                    temp3=temp3.next;
                    temp3.next=null;
                }
                temp1=temp1.next;
                temp2=temp2.next;
            }
        }
        if(temp1!=null)
            temp3.next=temp1;
        if(temp2!=null)
            temp3.next=temp2;
        return l3;
    }
}
