/**
*Given a linked list, remove the nth node from the end of list and return its head.
*Given linked list: 1->2->3->4->5, and n = 2. After removing the second node from the end, the linked list becomes 1->2->3->5.
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
 public class Solution {
    public ListNode removeNthFromEnd(ListNode head, int n) {
        if(head==null)
            return head;
        int count=0;
        ListNode temp=head;
        while(temp!=null)
        {
            count++;
            temp=temp.next;
        }
        if(count<n)
            n=count;
        int index=count-n;
        temp=head;
        if(index==0)
        {
            head=temp.next;
            temp=null;
            return head;
        }
        int i=0;
        while(i!=index-1)
        {
            temp=temp.next;
            i++;
        }
        ListNode del=temp.next;
        temp.next=temp.next.next;
        del=null;
        return head;
    }
}
